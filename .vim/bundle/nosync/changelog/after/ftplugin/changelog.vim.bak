" ChangeLogファイルを呼び出す
"nmap <F4> :tabnew ~/local/src/chlog/ChangeLog<CR>
nmap <F4> :tabnew ~/Dropbox/Documents/LifeLog.txt<CR>

" ChangeLogファイルを読んだ時のみのコマンド
augroup MyChangeLog
	autocmd!
        autocmd BufRead,BufCreate,BufNew *.changelog setlocal filetype=changelog
        autocmd Syntax changelog set fdm=syntax
        autocmd FileType changelog set formatoptions=qt
	"autocmd FileType changelog nmap <silent><buffer> <C-M> <Leader>o<ESC>:<C-u>call ChangeLogPrintTimeStamp()<CR>
	"autocmd FileType changelog nnoremap <silent><buffer> <C-n> :call ChangeLogGoToNextDay()<CR>
	"autocmd FileType changelog nnoremap <silent><buffer> <C-p> :call ChangeLogGoToPrevDay()<CR>
augroup END

" ChangeLog
nnoremap <silent><buffer> <C-n> :call ChangeLogGoToNextDay()<CR>
nnoremap <silent><buffer> <C-p> :call ChangeLogGoToPrevDay()<CR>

" ChangeLogファイルの時刻挿入関数
function! ChangeLogPrintTimeStamp()
	let now = localtime()
	let date = strftime("[%H:%M]: ", now)
	execute "normal! a" . date
endfunction 

" カーソルから前日へ移動
function! ChangeLogGoToPrevDay()
	let curr_line  = line('.')  " 現在行番
	let first_line = 0          " 先頭行番
	" カレント行から先頭行へのファイルの行読み込み
	while first_line < curr_line
		let curr_line = curr_line - 1
		" TODO: まだ初期ChangeLogフォーマット(YYYY-MM-DD)にしか対応してない
		if match(getline(curr_line), '^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}') == 0
			" 見付かったら移動
			execute "normal! " curr_line . "Gzz"
			break
		endif
	endwhile
endfunction

" カーソル行から次の日へ移動
function! ChangeLogGoToNextDay()
	let curr_line = line('.') " 現在行番号
	let last_line = line("$") " 最終行番号
	" カレント行から最終行へのファイルの行読み込み
	while curr_line < last_line 
		let curr_line = curr_line + 1
		" TODO: まだ初期ChangeLogフォーマット(YYYY-MM-DD)にしか対応してない
		if match(getline(curr_line), '^[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}') == 0
			" 見付かったら移動
			execute "normal! " curr_line . "Gzz"
			break
		endif
	endwhile
endfunction

